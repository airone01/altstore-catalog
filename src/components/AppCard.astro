---
import type { CollectionEntry } from "astro:content";
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardDescription,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Image } from "astro:assets";

interface Props {
  app: CollectionEntry<"apps">;
  loading: "eager" | "lazy" | undefined;
  compact?: boolean;
}

const { app, compact = false, loading } = Astro.props as Props;
---

<Card className="hover:shadow-lg transition-shadow">
  <CardHeader className={compact ? "pb-4" : undefined}>
    <div class="flex items-start gap-3">
      <Image
        src={app.data.icon}
        alt={`${app.data.name} icon`}
        class={compact
          ? "w-12 h-12 rounded-xl object-cover flex-shrink-0"
          : "w-14 h-14 rounded-xl object-cover flex-shrink-0"}
        loading={loading}
        width={50}
        height={50}
      />
      <div class="flex-1 min-w-0">
        <div class="flex items-center gap-2 mb-1">
          <CardTitle
            className={compact
              ? "text-base leading-tight truncate"
              : "text-lg leading-tight truncate"}
          >
            {app.data.name}
          </CardTitle>
          {
            app.data.featured && (
              <Badge
                variant="outline"
                className="text-xs bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200"
              >
                ⭐
              </Badge>
            )
          }
          {
            app.data.verified && (
              <Badge
                variant="outline"
                className="text-xs bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200"
              >
                ✓
              </Badge>
            )
          }
        </div>
        <CardDescription className="text-sm">
          {app.data.developer}
        </CardDescription>
      </div>
    </div>
  </CardHeader>
  <CardContent>
    <p class="text-sm text-muted-foreground mb-3 line-clamp-2">
      {app.data.description}
    </p>

    <div
      class="flex items-center justify-between text-xs text-muted-foreground mb-3"
    >
      <span>v{app.data.version}</span>
      <span>{app.data.size}</span>
    </div>

    <div class="flex items-center justify-between">
      <div class="text-xs text-muted-foreground">
        Updated {app.data.lastUpdated.toLocaleDateString()}
      </div>
      <a href={`/apps/${app.slug}`}>
        <Button size="sm">{compact ? "View" : "View App"}</Button>
      </a>
    </div>
  </CardContent>
</Card>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
